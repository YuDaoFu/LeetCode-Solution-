class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:

        countA = 0
        countB = 0

        dummyA = headA
        dummyB = headB
        # the the length of A and B and the set them to the same length
        while dummyA:
            countA+=1
            dummyA = dummyA.next

        while dummyB:
            countB+=1
            dummyB = dummyB.next

        i = 0
        if countA>=countB:
            while(i<countA-countB):
                headA = headA.next
                i+=1
        else:
            while(i<countB-countA):
                headB = headB.next
                i+=1


        # when we still have elements, test if they are the same, if not, move to the next one
        while headA:
            if headA == headB:
                return headA
            headA = headA.next
            headB = headB.next

        return None 
